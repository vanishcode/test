(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1558,120],{41194:(t,e,n)=>{"use strict";n.d(e,{v:()=>o});var i=n(5279),s=n(17022),a=n.n(s);class o extends i.J5{async init(t){this.chainConfig||(this.chainConfig=(0,i.h2)(i.EN.SOLANA,1))}async authenticateUser(){if(!this.provider||this.status!==i.MP.CONNECTED)throw i.RM.notConnectedError();const{chainNamespace:t,chainId:e}=this.chainConfig,n=await this.provider.request({method:"getAccounts"});if(n&&n.length>0){const s=(0,i.Cb)(n[0],this.name);if(s&&!(0,i.$E)(s))return{idToken:s};const o={domain:window.location.origin,uri:window.location.href,address:n[0],chainId:parseInt(e,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:(new Date).toISOString()},r=await(0,i.tV)(o,t),h=(new TextEncoder).encode(r),c=await this.provider.request({method:"signMessage",params:{message:h,display:"utf8"}}),l=await(0,i.rn)(t,a().encode(c),r,this.name,this.sessionTime,this.clientId,this.web3AuthNetwork);return(0,i.Fr)(n[0],this.name,l),{idToken:l}}throw i.RM.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnectSession(){super.checkDisconnectionRequirements();const t=await this.provider.request({method:"getAccounts"});t&&t.length>0&&(0,i.qz)(t[0],this.name)}async disconnect(){this.rehydrated=!1,this.emit(i.n2.DISCONNECTED)}}},97716:(t,e,n)=>{"use strict";n.r(e),n.d(e,{PhantomAdapter:()=>h});var i=n(56666),s=n(5279),a=n(41194),o=n(3279);function r(t,e,n){return new Promise(((i,s)=>{n>0?setTimeout((async()=>{const a=await t();a&&i(a),a||r(t,e,n-1).then((t=>(i(t),t))).catch((t=>s(t)))}),e):i(!1)}))}class h extends a.v{constructor(){super(...arguments),(0,i.Z)(this,"name",s.rW.PHANTOM),(0,i.Z)(this,"adapterNamespace",s.yk.SOLANA),(0,i.Z)(this,"currentChainNamespace",s.EN.SOLANA),(0,i.Z)(this,"type",s.hN.EXTERNAL),(0,i.Z)(this,"status",s.MP.NOT_READY),(0,i.Z)(this,"_wallet",null),(0,i.Z)(this,"phantomProvider",null),(0,i.Z)(this,"_onDisconnect",(()=>{this._wallet&&(this._wallet.off("disconnect",this._onDisconnect),this.rehydrated=!1,this.status=this.status===s.MP.CONNECTED?s.MP.READY:s.MP.NOT_READY,this.emit(s.n2.DISCONNECTED))}))}get isWalletConnected(){var t;return!(null===(t=this._wallet)||void 0===t||!t.isConnected||this.status!==s.MP.CONNECTED)}get provider(){var t;return(null===(t=this.phantomProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}async init(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(await super.init(t),super.checkInitializationRequirements(),this._wallet=await async function(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{interval:1e3,count:3};return"undefined"!=typeof window&&null!==(t=window.solana)&&void 0!==t&&t.isPhantom||await r((()=>{var t;return null===(t=window.solana)||void 0===t?void 0:t.isPhantom}),e.interval,e.count)?window.solana:null}({interval:500,count:3}),!this._wallet)throw s.Ty.notInstalled();this.phantomProvider=new o.PhantomInjectedProvider({config:{chainConfig:this.chainConfig}}),this.status=s.MP.READY,this.emit(s.n2.READY,s.rW.PHANTOM);try{s.cM.debug("initializing phantom adapter"),t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(t){s.cM.error("Failed to connect with cached phantom provider",t),this.emit("ERRORED",t)}}async connect(){var t=this;try{if(super.checkConnectionRequirements(),this.status=s.MP.CONNECTING,this.emit(s.n2.CONNECTING,{adapter:s.rW.PHANTOM}),!this._wallet)throw s.Ty.notInstalled();if(this._wallet.isConnected)await this.connectWithProvider(this._wallet);else{const e=this._wallet._handleDisconnect;try{await new Promise(((n,i)=>{this._wallet?(this._wallet.once("connect",(async()=>{await this.connectWithProvider(this._wallet),n(this.provider)})),this._wallet._handleDisconnect=function(){i(s.Ty.windowClosed());for(var n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];return e.apply(t._wallet,a)},this._wallet.connect().catch((t=>{i(t)}))):i(s.Ty.notInstalled())}))}catch(t){if(t instanceof s.up)throw t;throw s.RM.connectionError(null==t?void 0:t.message)}finally{this._wallet._handleDisconnect=e}}if(!this._wallet.publicKey)throw s.RM.connectionError();return this._wallet.on("disconnect",this._onDisconnect),this.provider}catch(t){throw this.status=s.MP.READY,this.rehydrated=!1,this.emit(s.n2.ERRORED,t),t}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};await super.disconnectSession();try{var e;await(null===(e=this._wallet)||void 0===e?void 0:e.disconnect()),t.cleanup&&(this.status=s.MP.NOT_READY,this.phantomProvider=null,this._wallet=null),await super.disconnect()}catch(t){this.emit(s.n2.ERRORED,s.RM.disconnectionError(null==t?void 0:t.message))}}async getUserInfo(){if(!this.isWalletConnected)throw s.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async addChain(t){var e;let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkAddChainRequirements(n),null===(e=this.phantomProvider)||void 0===e||e.addChain(t),this.addChainConfig(t)}async switchChain(t){var e;let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkSwitchChainRequirements(t,n),await(null===(e=this.phantomProvider)||void 0===e?void 0:e.switchChain(t)),this.setAdapterSettings({chainConfig:this.getChainConfig(t.chainId)})}async connectWithProvider(t){if(!this.phantomProvider)throw s.RM.connectionError("No phantom provider");return await this.phantomProvider.setupProvider(t),this.status=s.MP.CONNECTED,this.emit(s.n2.CONNECTED,{adapter:s.rW.PHANTOM,reconnected:this.rehydrated}),this.provider}}},31993:()=>{},50787:()=>{},60986:()=>{},57017:()=>{}}]);